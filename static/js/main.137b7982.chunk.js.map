{"version":3,"sources":["components/CircleSelector/CircleSelector.jsx","components/Circles/Circles.jsx","App.js","reportWebVitals.js","index.js"],"names":["CircleSelector","props","className","onClick","handleClick","Circles","selectedCircle","App","state","updateSelection","number","setState","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAEe,SAASA,EAAeC,GAEnC,OACI,sBAAKC,UAAU,iBAAf,UACI,wBAAQC,QAAS,kBAAMF,EAAMG,YAAY,IAAzC,6BACA,wBAAQD,QAAS,kBAAMF,EAAMG,YAAY,IAAzC,6BACA,wBAAQD,QAAS,kBAAMF,EAAMG,YAAY,IAAzC,6BACA,wBAAQD,QAAS,kBAAMF,EAAMG,YAAY,IAAzC,gC,MCPG,SAASC,EAAQJ,GAE5B,OACI,sBAAKC,UAAU,UAAf,UACI,qBAAKA,UAAqC,IAAzBD,EAAMK,eAAuB,WAAa,GAA3D,eACA,qBAAKJ,UAAqC,IAAzBD,EAAMK,eAAuB,WAAa,GAA3D,eACA,qBAAKJ,UAAqC,IAAzBD,EAAMK,eAAuB,WAAa,GAA3D,eACA,qBAAKJ,UAAqC,IAAzBD,EAAMK,eAAuB,WAAa,GAA3D,kB,ICqBGC,E,4MAvBbC,MAAO,CACLF,eAAgB,G,EAGlBG,gBAAkB,SAACC,GACjB,EAAKC,SAAU,CACbL,eAAgBI,K,4CAIpB,WACE,OACE,sBAAKR,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,qCACA,iCACE,cAACF,EAAD,CAAgBI,YAAaQ,KAAKH,kBAClC,cAACJ,EAAD,CAASC,eAAgBM,KAAKJ,MAAMF,2B,GAlB5BO,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.137b7982.chunk.js","sourcesContent":["import './circleselector.css'\r\n\r\nexport default function CircleSelector(props) {\r\n\r\n    return (\r\n        <div className=\"CircleSelector\">\r\n            <button onClick={() => props.handleClick(1)}>Select Circle 1</button>\r\n            <button onClick={() => props.handleClick(2)}>Select Circle 2</button>\r\n            <button onClick={() => props.handleClick(3)}>Select Circle 3</button>\r\n            <button onClick={() => props.handleClick(4)}>Select Circle 4</button>\r\n        </div>\r\n    )\r\n}","import './circles.css'\r\n\r\nexport default function Circles(props) {\r\n\r\n    return (\r\n        <div className=\"Circles\">\r\n            <div className={ props.selectedCircle === 1 ? 'selected' : ''}>1</div>\r\n            <div className={ props.selectedCircle === 2 ? 'selected' : ''}>2</div>\r\n            <div className={ props.selectedCircle === 3 ? 'selected' : ''}>3</div>\r\n            <div className={ props.selectedCircle === 4 ? 'selected' : ''}>4</div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport CircleSelector from './components/CircleSelector/CircleSelector.jsx';\nimport Circles from './components/Circles/Circles.jsx';\n\nclass App extends Component {\n\n  state ={\n    selectedCircle: 1,\n  }\n\n  updateSelection = (number) => {\n    this.setState ({\n      selectedCircle: number,\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">UNIT 4 FINAL ASSESSMENT</header>\n        <main>\n          <CircleSelector handleClick={this.updateSelection} />\n          <Circles selectedCircle={this.state.selectedCircle} />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}